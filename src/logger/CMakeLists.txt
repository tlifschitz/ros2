cmake_minimum_required(VERSION 3.8)
project(logger)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rcl_interfaces REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()

  find_package(ament_cmake_gtest REQUIRED)
  ament_add_gtest(test_logger test/test_logger.cpp)

  target_include_directories(test_logger PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/test
  )

  ament_target_dependencies(test_logger rclcpp rcl_interfaces)


endif()


# Add executable
add_executable(logger_node src/logger_node.cpp)

target_include_directories(logger_node PRIVATE
  ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Link against ROS2 libraries
ament_target_dependencies(logger_node rclcpp)

# Install executable so ROS2 can find it
install(TARGETS
  logger_node
  DESTINATION lib/${PROJECT_NAME})

ament_package()
